@model Courses.ViewModels.ProductForAddEditViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<div class="panel panel-default">
    <div class="panel-heading">
        <h3>Редактирование информации курса "@Model.Name"</h3>
    </div>
    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="panel-body">
            <br>
            @Html.ValidationSummary(true, "", new { @class = "alert-danger" })
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.CreatedDate)
            @Html.HiddenFor(m => m.UpdatedDate)
            @Html.HiddenFor(m => m.Image)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Type, Model.ProductTypes, null, new { @class = "form-control" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.PartnerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.PartnerId, Model.Partners as SelectList, htmlAttributes: new { @class="form-control"})
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.Teacher, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Teacher, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Teacher, "", new { @class = "text-danger" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.SeatsCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.SeatsCount, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SeatsCount, "", new { @class = "text-danger" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.AssignedUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AssignedUserId, Model.Accounts as SelectList, htmlAttributes: new { @class = " form-control" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <br><br>
            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br><br>
            <div class="form-group">
                <label class="control-label col-md-2">Картинка</label>
                <div class="col-md-10">
                    <a class='btn' href='javascript:;'>
                        Выберите файл...
                        <input type="file" name="file" id="file" class="col-md-10"
                               style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;"
                               onchange='$("#upload-file-info").html($(this).val());'>
                    </a>
                    <span class='label label-info' id="upload-file-info"></span>
                </div>
                @if (Model.Image == null)
                {
                    <div class="form-control-static">Нет картинки</div>
                }
                else
                {
                    @Html.Raw("<img class=\"img - thumbnail\" style='width:500px;' src=\"data:image/jpeg;base64,"
                                + Convert.ToBase64String(Model.Image) + "\" />")
                }
            </div>
        </div>
        <br>
        <div class=" panel-footer">
            @Html.ActionLink("Назад к списку", "Index", new { }, htmlAttributes: new { @class = "btn btn-warning" })
            <input type="submit" value="Сохранить" class="btn btn-success" />
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
